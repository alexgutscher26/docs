{
  "openapi": "3.1.0",
  "info": {
    "title": "StackForge API",
    "description": "API for the StackForge social media marketing platform",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/posts": {
      "get": {
        "description": "Returns all social media posts from the system",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Posts response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new social media post",
        "requestBody": {
          "description": "Post to add to the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Post response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "delete": {
        "description": "Deletes a single post based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of post to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Post deleted",
            "content": {}
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/webhook": {
      "post": {
        "description": "Webhook for receiving social media updates",
        "requestBody": {
          "description": "Social media update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Post": {
        "required": [
          "id",
          "content",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier of the post",
            "type": "string"
          },
          "content": {
            "description": "The content of the social media post",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user who created the post",
            "type": "string"
          },
          "createdAt": {
            "description": "The timestamp when the post was created",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NewPost": {
        "required": [
          "content",
          "userId"
        ],
        "type": "object",
        "properties": {
          "content": {
            "description": "The content of the social media post",
            "type": "string"
          },
          "userId": {
            "description": "The ID of the user who created the post",
            "type": "string"
          }
        }
      },
      "WebhookPayload": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of webhook event",
            "type": "string"
          },
          "data": {
            "description": "The webhook payload data",
            "type": "object"
          }
        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}